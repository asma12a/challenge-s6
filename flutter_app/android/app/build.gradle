plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}


android {
    namespace = "com.example.squad_go"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.squad_go"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        minSdkVersion flutter.minSdkVersion
    }

    signingConfigs {
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword = keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all {
        variant ->
            variant.outputs.each {
                output->
                    // on below line we are specifying our app name.
                    project.ext { appName = 'squad-go' }
                    // on below line we are adding the formatted date to our apk file name.
                    def formattedDate = new Date().format('yyyy-MM-dd-HH-mm-ss')
                    // on below line we are creating a new name for our apk.
                    def newName = output.outputFile.name
                    // on below line we are replacing our previous name with our app name.
                    newName = newName.replace("app-", "$project.ext.appName-")
                    // on below line we are replacing -release with our formatted date.
                    newName = newName.replace("-release", "-" + formattedDate)
                    // debug 
                    newName = newName.replace("-debug", "-debug-" + formattedDate)
                    // at last we are setting our apk name to it.
                    output.outputFileName  = newName
            }
    }
}

flutter {
    source = "../.."
}
